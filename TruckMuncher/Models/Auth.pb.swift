// Generated by the protocol buffer compiler.  DO NOT EDIT!

import Foundation
import ProtocolBuffers

internal struct AuthRoot {
  internal static var sharedInstance : AuthRoot {
   struct Static {
       static let instance : AuthRoot = AuthRoot()
   }
   return Static.instance
  }
  var extensionRegistry:ExtensionRegistry

  init() {
    extensionRegistry = ExtensionRegistry()
    registerAllExtensions(extensionRegistry)
  }
  internal func registerAllExtensions(registry:ExtensionRegistry) {
  }
}

internal func == (lhs: AuthRequest, rhs: AuthRequest) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: AuthResponse, rhs: AuthResponse) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasUserId == rhs.hasUserId) && (!lhs.hasUserId || lhs.userId == rhs.userId)
  fieldCheck = fieldCheck && (lhs.hasUsername == rhs.hasUsername) && (!lhs.hasUsername || lhs.username == rhs.username)
  fieldCheck = fieldCheck && (lhs.hasSessionToken == rhs.hasSessionToken) && (!lhs.hasSessionToken || lhs.sessionToken == rhs.sessionToken)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

internal func == (lhs: DeleteAuthResponse, rhs: DeleteAuthResponse) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  return (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
}

final internal class AuthRequest : GeneratedMessage {
  required internal init() {
       super.init()
  }
  override internal func isInitialized() -> Bool {
   return true
  }
  override internal func writeToCodedOutputStream(output:CodedOutputStream) {
    unknownFields.writeToCodedOutputStream(output)
  }
  override internal func serializedSize() -> Int32 {
    var size:Int32 = memoizedSerializedSize
    if size != -1 {
     return size
    }

    size = 0
    size += unknownFields.serializedSize()
    memoizedSerializedSize = size
    return size
  }
  internal class func parseFromData(data:[Byte]) -> AuthRequest {
    return AuthRequest.builder().mergeFromData(data).build()
  }
  internal class func parseFromData(data:[Byte], extensionRegistry:ExtensionRegistry) -> AuthRequest {
    return AuthRequest.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
  }
  internal class func parseFromInputStream(input:NSInputStream) -> AuthRequest {
    return AuthRequest.builder().mergeFromInputStream(input).build()
  }
  internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->AuthRequest {
    return AuthRequest.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
  }
  internal class func parseFromCodedInputStream(input:CodedInputStream) -> AuthRequest {
    return AuthRequest.builder().mergeFromCodedInputStream(input).build()
  }
  internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> AuthRequest {
    return AuthRequest.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
  }
  internal class func builder() -> AuthRequestBuilder {
    return AuthRequest.classBuilder() as AuthRequestBuilder
  }
  internal func builder() -> AuthRequestBuilder {
    return classBuilder() as AuthRequestBuilder
  }
  internal override class func classBuilder() -> MessageBuilder {
    return AuthRequestBuilder()
  }
  internal override func classBuilder() -> MessageBuilder {
    return AuthRequest.builder()
  }
  internal func toBuilder() -> AuthRequestBuilder {
    return AuthRequest.builderWithPrototype(self)
  }
  internal class func builderWithPrototype(prototype:AuthRequest) -> AuthRequestBuilder {
    return AuthRequest.builder().mergeFrom(prototype)
  }
  override internal func writeDescriptionTo(inout output:String, indent:String) {
    unknownFields.writeDescriptionTo(&output, indent:indent)
  }
  override internal var hashValue:Int {
      get {
          var hashCode:Int = 7
          hashCode = (hashCode &* 31) &+  unknownFields.hashValue
          return hashCode
      }
  }


  //Meta information declaration start

  override internal class func className() -> String {
      return "AuthRequest"
  }
  override internal func className() -> String {
      return "AuthRequest"
  }
  override internal func classMetaType() -> GeneratedMessage.Type {
      return AuthRequest.self
  }


  //Meta information declaration end

}

final internal class AuthRequestBuilder : GeneratedMessageBuilder {
  private var builderResult:AuthRequest

  required override internal init () {
     builderResult = AuthRequest()
     super.init()
  }
  override internal var internalGetResult:GeneratedMessage {
       get {
          return builderResult
       }
  }
  internal override func clear() -> AuthRequestBuilder {
    builderResult = AuthRequest()
    return self
  }
  internal override func clone() -> AuthRequestBuilder {
    return AuthRequest.builderWithPrototype(builderResult)
  }
  internal override func build() -> AuthRequest {
       checkInitialized()
       return buildPartial()
  }
  internal func buildPartial() -> AuthRequest {
    var returnMe:AuthRequest = builderResult
    return returnMe
  }
  internal func mergeFrom(other:AuthRequest) -> AuthRequestBuilder {
    if (other == AuthRequest()) {
     return self
    }
    mergeUnknownFields(other.unknownFields)
    return self
  }
  internal override func mergeFromCodedInputStream(input:CodedInputStream) ->AuthRequestBuilder {
       return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
  }
  internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> AuthRequestBuilder {
    var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
    while (true) {
      var tag = input.readTag()
      switch tag {
      case 0: 
        self.unknownFields = unknownFieldsBuilder.build()
        return self

      default:
        if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
           unknownFields = unknownFieldsBuilder.build()
           return self
        }
      }
    }
  }
}

final internal class AuthResponse : GeneratedMessage {
  private(set) var hasUserId:Bool = false
  private(set) var userId:String = ""

  private(set) var hasUsername:Bool = false
  private(set) var username:String = ""

  private(set) var hasSessionToken:Bool = false
  private(set) var sessionToken:String = ""

  required internal init() {
       super.init()
  }
  override internal func isInitialized() -> Bool {
    if !hasUserId {
      return false
    }
    if !hasUsername {
      return false
    }
    if !hasSessionToken {
      return false
    }
   return true
  }
  override internal func writeToCodedOutputStream(output:CodedOutputStream) {
    if hasUserId {
      output.writeString(1, value:userId)
    }
    if hasUsername {
      output.writeString(2, value:username)
    }
    if hasSessionToken {
      output.writeString(3, value:sessionToken)
    }
    unknownFields.writeToCodedOutputStream(output)
  }
  override internal func serializedSize() -> Int32 {
    var size:Int32 = memoizedSerializedSize
    if size != -1 {
     return size
    }

    size = 0
    if hasUserId {
      size += WireFormat.computeStringSize(1, value:userId)
    }
    if hasUsername {
      size += WireFormat.computeStringSize(2, value:username)
    }
    if hasSessionToken {
      size += WireFormat.computeStringSize(3, value:sessionToken)
    }
    size += unknownFields.serializedSize()
    memoizedSerializedSize = size
    return size
  }
  internal class func parseFromData(data:[Byte]) -> AuthResponse {
    return AuthResponse.builder().mergeFromData(data).build()
  }
  internal class func parseFromData(data:[Byte], extensionRegistry:ExtensionRegistry) -> AuthResponse {
    return AuthResponse.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
  }
  internal class func parseFromInputStream(input:NSInputStream) -> AuthResponse {
    return AuthResponse.builder().mergeFromInputStream(input).build()
  }
  internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->AuthResponse {
    return AuthResponse.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
  }
  internal class func parseFromCodedInputStream(input:CodedInputStream) -> AuthResponse {
    return AuthResponse.builder().mergeFromCodedInputStream(input).build()
  }
  internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> AuthResponse {
    return AuthResponse.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
  }
  internal class func builder() -> AuthResponseBuilder {
    return AuthResponse.classBuilder() as AuthResponseBuilder
  }
  internal func builder() -> AuthResponseBuilder {
    return classBuilder() as AuthResponseBuilder
  }
  internal override class func classBuilder() -> MessageBuilder {
    return AuthResponseBuilder()
  }
  internal override func classBuilder() -> MessageBuilder {
    return AuthResponse.builder()
  }
  internal func toBuilder() -> AuthResponseBuilder {
    return AuthResponse.builderWithPrototype(self)
  }
  internal class func builderWithPrototype(prototype:AuthResponse) -> AuthResponseBuilder {
    return AuthResponse.builder().mergeFrom(prototype)
  }
  override internal func writeDescriptionTo(inout output:String, indent:String) {
    if hasUserId {
      output += "\(indent) userId: \(userId) \n"
    }
    if hasUsername {
      output += "\(indent) username: \(username) \n"
    }
    if hasSessionToken {
      output += "\(indent) sessionToken: \(sessionToken) \n"
    }
    unknownFields.writeDescriptionTo(&output, indent:indent)
  }
  override internal var hashValue:Int {
      get {
          var hashCode:Int = 7
          if hasUserId {
             hashCode = (hashCode &* 31) &+ userId.hashValue
          }
          if hasUsername {
             hashCode = (hashCode &* 31) &+ username.hashValue
          }
          if hasSessionToken {
             hashCode = (hashCode &* 31) &+ sessionToken.hashValue
          }
          hashCode = (hashCode &* 31) &+  unknownFields.hashValue
          return hashCode
      }
  }


  //Meta information declaration start

  override internal class func className() -> String {
      return "AuthResponse"
  }
  override internal func className() -> String {
      return "AuthResponse"
  }
  override internal func classMetaType() -> GeneratedMessage.Type {
      return AuthResponse.self
  }


  //Meta information declaration end

}

final internal class AuthResponseBuilder : GeneratedMessageBuilder {
  private var builderResult:AuthResponse

  required override internal init () {
     builderResult = AuthResponse()
     super.init()
  }
  var hasUserId:Bool {
       get {
            return builderResult.hasUserId
       }
  }
  var userId:String {
       get {
            return builderResult.userId
       }
       set (value) {
           builderResult.hasUserId = true
           builderResult.userId = value
       }
  }
  internal func clearUserId() -> AuthResponseBuilder{
       builderResult.hasUserId = false
       builderResult.userId = ""
       return self
  }
  var hasUsername:Bool {
       get {
            return builderResult.hasUsername
       }
  }
  var username:String {
       get {
            return builderResult.username
       }
       set (value) {
           builderResult.hasUsername = true
           builderResult.username = value
       }
  }
  internal func clearUsername() -> AuthResponseBuilder{
       builderResult.hasUsername = false
       builderResult.username = ""
       return self
  }
  var hasSessionToken:Bool {
       get {
            return builderResult.hasSessionToken
       }
  }
  var sessionToken:String {
       get {
            return builderResult.sessionToken
       }
       set (value) {
           builderResult.hasSessionToken = true
           builderResult.sessionToken = value
       }
  }
  internal func clearSessionToken() -> AuthResponseBuilder{
       builderResult.hasSessionToken = false
       builderResult.sessionToken = ""
       return self
  }
  override internal var internalGetResult:GeneratedMessage {
       get {
          return builderResult
       }
  }
  internal override func clear() -> AuthResponseBuilder {
    builderResult = AuthResponse()
    return self
  }
  internal override func clone() -> AuthResponseBuilder {
    return AuthResponse.builderWithPrototype(builderResult)
  }
  internal override func build() -> AuthResponse {
       checkInitialized()
       return buildPartial()
  }
  internal func buildPartial() -> AuthResponse {
    var returnMe:AuthResponse = builderResult
    return returnMe
  }
  internal func mergeFrom(other:AuthResponse) -> AuthResponseBuilder {
    if (other == AuthResponse()) {
     return self
    }
    if other.hasUserId {
         userId = other.userId
    }
    if other.hasUsername {
         username = other.username
    }
    if other.hasSessionToken {
         sessionToken = other.sessionToken
    }
    mergeUnknownFields(other.unknownFields)
    return self
  }
  internal override func mergeFromCodedInputStream(input:CodedInputStream) ->AuthResponseBuilder {
       return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
  }
  internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> AuthResponseBuilder {
    var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
    while (true) {
      var tag = input.readTag()
      switch tag {
      case 0: 
        self.unknownFields = unknownFieldsBuilder.build()
        return self

      case 10 :
        userId = input.readString()

      case 18 :
        username = input.readString()

      case 26 :
        sessionToken = input.readString()

      default:
        if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
           unknownFields = unknownFieldsBuilder.build()
           return self
        }
      }
    }
  }
}

final internal class DeleteAuthResponse : GeneratedMessage {
  required internal init() {
       super.init()
  }
  override internal func isInitialized() -> Bool {
   return true
  }
  override internal func writeToCodedOutputStream(output:CodedOutputStream) {
    unknownFields.writeToCodedOutputStream(output)
  }
  override internal func serializedSize() -> Int32 {
    var size:Int32 = memoizedSerializedSize
    if size != -1 {
     return size
    }

    size = 0
    size += unknownFields.serializedSize()
    memoizedSerializedSize = size
    return size
  }
  internal class func parseFromData(data:[Byte]) -> DeleteAuthResponse {
    return DeleteAuthResponse.builder().mergeFromData(data).build()
  }
  internal class func parseFromData(data:[Byte], extensionRegistry:ExtensionRegistry) -> DeleteAuthResponse {
    return DeleteAuthResponse.builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
  }
  internal class func parseFromInputStream(input:NSInputStream) -> DeleteAuthResponse {
    return DeleteAuthResponse.builder().mergeFromInputStream(input).build()
  }
  internal class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) ->DeleteAuthResponse {
    return DeleteAuthResponse.builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
  }
  internal class func parseFromCodedInputStream(input:CodedInputStream) -> DeleteAuthResponse {
    return DeleteAuthResponse.builder().mergeFromCodedInputStream(input).build()
  }
  internal class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> DeleteAuthResponse {
    return DeleteAuthResponse.builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
  }
  internal class func builder() -> DeleteAuthResponseBuilder {
    return DeleteAuthResponse.classBuilder() as DeleteAuthResponseBuilder
  }
  internal func builder() -> DeleteAuthResponseBuilder {
    return classBuilder() as DeleteAuthResponseBuilder
  }
  internal override class func classBuilder() -> MessageBuilder {
    return DeleteAuthResponseBuilder()
  }
  internal override func classBuilder() -> MessageBuilder {
    return DeleteAuthResponse.builder()
  }
  internal func toBuilder() -> DeleteAuthResponseBuilder {
    return DeleteAuthResponse.builderWithPrototype(self)
  }
  internal class func builderWithPrototype(prototype:DeleteAuthResponse) -> DeleteAuthResponseBuilder {
    return DeleteAuthResponse.builder().mergeFrom(prototype)
  }
  override internal func writeDescriptionTo(inout output:String, indent:String) {
    unknownFields.writeDescriptionTo(&output, indent:indent)
  }
  override internal var hashValue:Int {
      get {
          var hashCode:Int = 7
          hashCode = (hashCode &* 31) &+  unknownFields.hashValue
          return hashCode
      }
  }


  //Meta information declaration start

  override internal class func className() -> String {
      return "DeleteAuthResponse"
  }
  override internal func className() -> String {
      return "DeleteAuthResponse"
  }
  override internal func classMetaType() -> GeneratedMessage.Type {
      return DeleteAuthResponse.self
  }


  //Meta information declaration end

}

final internal class DeleteAuthResponseBuilder : GeneratedMessageBuilder {
  private var builderResult:DeleteAuthResponse

  required override internal init () {
     builderResult = DeleteAuthResponse()
     super.init()
  }
  override internal var internalGetResult:GeneratedMessage {
       get {
          return builderResult
       }
  }
  internal override func clear() -> DeleteAuthResponseBuilder {
    builderResult = DeleteAuthResponse()
    return self
  }
  internal override func clone() -> DeleteAuthResponseBuilder {
    return DeleteAuthResponse.builderWithPrototype(builderResult)
  }
  internal override func build() -> DeleteAuthResponse {
       checkInitialized()
       return buildPartial()
  }
  internal func buildPartial() -> DeleteAuthResponse {
    var returnMe:DeleteAuthResponse = builderResult
    return returnMe
  }
  internal func mergeFrom(other:DeleteAuthResponse) -> DeleteAuthResponseBuilder {
    if (other == DeleteAuthResponse()) {
     return self
    }
    mergeUnknownFields(other.unknownFields)
    return self
  }
  internal override func mergeFromCodedInputStream(input:CodedInputStream) ->DeleteAuthResponseBuilder {
       return mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
  }
  internal override func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) -> DeleteAuthResponseBuilder {
    var unknownFieldsBuilder:UnknownFieldSetBuilder = UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
    while (true) {
      var tag = input.readTag()
      switch tag {
      case 0: 
        self.unknownFields = unknownFieldsBuilder.build()
        return self

      default:
        if (!parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:tag)) {
           unknownFields = unknownFieldsBuilder.build()
           return self
        }
      }
    }
  }
}

//Class extensions: NSData


internal extension AuthRequest {
    class func parseFromNSData(data:NSData) -> AuthRequest {
        var bytes = [Byte](count: data.length, repeatedValue: 0)
        data.getBytes(&bytes)
        return AuthRequest.builder().mergeFromData(bytes).build()
    }
    class func parseFromNSData(data:NSData, extensionRegistry:ExtensionRegistry) -> AuthRequest {
        var bytes = [Byte](count: data.length, repeatedValue: 0)
        data.getBytes(&bytes)
        return AuthRequest.builder().mergeFromData(bytes, extensionRegistry:extensionRegistry).build()
    }
}
internal extension AuthResponse {
    class func parseFromNSData(data:NSData) -> AuthResponse {
        var bytes = [Byte](count: data.length, repeatedValue: 0)
        data.getBytes(&bytes)
        return AuthResponse.builder().mergeFromData(bytes).build()
    }
    class func parseFromNSData(data:NSData, extensionRegistry:ExtensionRegistry) -> AuthResponse {
        var bytes = [Byte](count: data.length, repeatedValue: 0)
        data.getBytes(&bytes)
        return AuthResponse.builder().mergeFromData(bytes, extensionRegistry:extensionRegistry).build()
    }
}
internal extension DeleteAuthResponse {
    class func parseFromNSData(data:NSData) -> DeleteAuthResponse {
        var bytes = [Byte](count: data.length, repeatedValue: 0)
        data.getBytes(&bytes)
        return DeleteAuthResponse.builder().mergeFromData(bytes).build()
    }
    class func parseFromNSData(data:NSData, extensionRegistry:ExtensionRegistry) -> DeleteAuthResponse {
        var bytes = [Byte](count: data.length, repeatedValue: 0)
        data.getBytes(&bytes)
        return DeleteAuthResponse.builder().mergeFromData(bytes, extensionRegistry:extensionRegistry).build()
    }
}

// @@protoc_insertion_point(global_scope)
